name: Android Release

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version Name (例: 1.0.1)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  actions: read

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Bump Version
        uses: chkfung/android-version-actions@v1.2.2
        with:
          gradlePath: app/build.gradle.kts
          versionName: ${{ github.event.inputs.version_name }}
          versionCode: ${{ github.run_number }}

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/release.jks

      - name: Build signed APK/AAB
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease
          ./gradlew bundleRelease

      - name: Upload Signed APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed-${{ github.event.inputs.version_name }}-${{ github.run_number }}.apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.event.inputs.version_name }}-${{ github.run_number }}.aab
          path: app/build/outputs/bundle/release/*.aab

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ github.event.inputs.version_name }}"
          name: "Release v${{ github.event.inputs.version_name }}"

          # 自動生成リリースノートを有効化
          generateReleaseNotes: true

          # 手動で追加する情報があれば併用可能
          body: |
            ## Release Summary
            Version: ${{ github.event.inputs.version_name }}
            Build: ${{ github.run_number }}

            ## Automatic Release Notes
            _Below are automatically generated release notes:_

          artifacts: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab

          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: "Release v${{ github.event.inputs.version_name }} (build ${{ github.run_number }})"
          branch: "release/v${{ github.event.inputs.version_name }}-${{ github.run_number }}"
          title: "Release v${{ github.event.inputs.version_name }}"
          body: |
            ## Release Summary
            Version: ${{ github.event.inputs.version_name }}
            Build: ${{ github.run_number }}
            
            ## Files Changed
            - Updated version in `app/build.gradle.kts`
            
            ## Release Assets
            - APK: Available in GitHub Release
            - AAB: Available in GitHub Release
            
            ## Next Steps
            1. Review and test the release
            2. Merge this PR to main
            3. Publish the GitHub Release (currently draft)
          draft: false
          delete-branch: false